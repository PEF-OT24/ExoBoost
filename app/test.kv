#:kivy 2.2.1
# --------------------------------------- Predefinición de clases para generalizar formato ----------------------------------------
<CustomLabelRoboto>: # Case predefinida para los subtítulos con formato
    font_name: "Roboto" # Roboto para texto y subtítulos
    font_size: "15sp" # 30sp para texto y subtítulos
    halign: "center"
    pos_hint: {"center_x": 0.5, "center_y": 0.5, "top": 0}
    theme_text_color: "Custom"
    text_color: app.colors["White"]

<CustomLabelAD>: # Case predefinida para los títulos con formato
    font_name: "ADLaMDisplay-Regular.ttf" # ADLaMdisplay para títulos
    font_size: "30sp" # 30sp para títulos
    halign: "center"
    pos_hint: {"center_x": 0.5, "center_y": 0.5, "top": 0}
    theme_text_color: "Custom"
    text_color: app.colors["White"]

<CustomTextEntry>: # Case predefinida para las entradas de texto con formato
    helper_text_mode: "on_focus"
    hint_text_color_normal: app.colors["Black"]  # En negro cuando no está seleccionado
    hint_text_color_focus: app.colors["Light Orange"]   # En naranja cuando está seleccionado 
    pos_hint: {"center_x": 0.5, "center_y": 0.5}  # Centrado
    halign: "center"
    hint_text: "Fill mode"
    mode: "fill"
    fill_color: app.colors["Light Gray"]

# --------------------------------------- Establecer prioridad en las ventanas ---------------------------------------- (SE PUEDE BORRAR)
WindowManager:
    MainWindow:
    SecundaryWindow:

# --------------------------------------- Ventana principal ----------------------------------------
<MainWindow>:
    name: "Main Window"

    BoxLayout:
        orientation: 'vertical'
        halign: "center"
        valign: "center"
        pos_hint: {"center_y": 0.5, "center_x": 0.5}

        # ------------------------------ Barra titular principal superior -------------------------
        MDTopAppBar:
            md_bg_color: app.colors["Black"]
            left_action_items: [['PossibleLogoW.png',lambda x: None]]
            title: "ExoBoost"
            font_name: 'ADLaMDisplay-Regular.ttf'
            pos_hint: {'center_x':0.5,'center_y':0.5}                              

        # ------------------------------- Se define la arquitectura base como un menú de navegación inferior -------------------------------
        MDBottomNavigation:
            id: bottom_nav
            panel_color: app.colors["Black"]

            # Establecer colores para los estados de selección
            text_color_normal: app.colors["Cyan"]
            text_color_active: app.colors["Light Orange"]
            icon_color_normal: app.colors["Cyan"]
            icon_color_active: app.colors["Light Orange"]

    # ---------------------------------------------- Menú de Bluetooth -------------------------------------------------- 
            MDBottomNavigationItem:
                # Configuraciones del menú de bluetooth
                id: bluetooh_tab
                name: "Bluetooth settings"
                text: "Bluetooth settings"
                icon: "bluetooth-settings"

                # Acciones 
                on_tab_release:
                    app.on_tab_select(bluetooh_tab.name)

                # Tab design
                BoxLayout:
                    orientation: 'vertical'
                    # Background color
                    canvas.before:
                        Color:
                            rgba: app.colors["Dark Blue"]
                        Rectangle:
                            pos: self.pos
                            size: self.size

                    CustomLabelAD:
                        id: bluetooth_title
                        text: "Bluetooth Connection"

                    # Boton para buscar dispositivos                       
                    BoxLayout:
                        Widget:
                        MDFillRoundFlatButton:
                            id: bluetooth_device_search
                            text: 'Search Devices'
                            text_color: app.colors['White']
                            size_hint: None, None
                            size: '200dp','50dp'
                            ripple_effect: False
                            ripple_color: app.colors['Cyan']
                            on_press: self.md_bg_color = app.colors["Light Orange"]
                            on_release: self.md_bg_color = app.colors["Cyan"]
                            on_press: root.search_devices()
                            md_bg_color: app.colors["Cyan"]
                            pos_hint: {'center_x':0.5,'center_y':0.5}
                            height: root.height*0.065
                        Widget:
                    # Design choice para espacio entre elementos :)
                    Widget:
                        size_hint_y: None
                        height: '20dp'
                    # Menu con dispositivos disponibles
                    ScrollView:
                        size_hint: (1,1)
                        RecycleView:
                            id: device_list
                            viewclass: 'SelectableLabel'
                            RecycleBoxLayout:
                                #color: app.colors["White"]
                                default_size: None, dp(56)
                                default_size_hint: 1,None
                                size_hint_y: None
                                height: self.minimum_height
                                orientation: 'vertical'
                    # Botón para conectarse/desconectarse a un dispositivo
                    BoxLayout:
                        size_hint_y: None
                        height: '50 dp'
                        Widget:
                        MDFillRoundFlatButton:
                            id: bluetooth_connect
                            text: 'CONNECT/DISCONNECT'
                            text_color: app.colors['White']
                            size_hint: None, None
                            ripple_effect: False
                            ripple_color: app.colors['Cyan']
                            on_press: self.md_bg_color = app.colors["Light Orange"]
                            on_release: self.md_bg_color = app.colors["Cyan"]
                            width: root.width*0.5
                            height: root.height*0.065
                            #on_press: 
                            try:
                                root.connect_disconnect()
                            except:
                                print('error')
                            md_bg_color: app.colors["Cyan"]
                            pos_hint: {'center_x':0}
                        Widget:
                    #Esto es solo para crear un espacio abajo (design choice)
                    Widget:
                        size_hint_y: None
                        height: '48dp'
    # ---------------------------------------------- Menú de Asistencia -------------------------------------------------- 
            
            MDBottomNavigationItem:
                id: assistance_tab
                name: "Assistance mode"
                text: "Assistance mode"
                icon: "walk"
                
                # Acciones 
                on_tab_release:
                    app.on_tab_select(assistance_tab.name)

                BoxLayout:
                    orientation: 'vertical'
                    canvas.before:
                        Color:
                            rgba: app.colors["Dark Blue"]
                        Rectangle:
                            pos: self.pos
                            size: self.size
                    
                    CustomLabelAD:
                        text: "Assistance Mode"
                        halign: "center"
                        valign: "top"
                        size_hint_y: None
                        height: self.texture_size[1] + 10  # Increased height to move higher
                        theme_text_color: "Custom"
                        text_color: app.colors["White"]

                    BoxLayout:
                        orientation: 'vertical'
                        size_hint_y: None
                        height: self.minimum_height
                        padding: dp(20)
                        spacing: dp(10)
                        pos_hint: {'center_x': 0.5, 'center_y': 0.5}

                        BoxLayout:
                            orientation: 'horizontal'
                            size_hint_y: None
                            height: self.minimum_height
                            padding: dp(20)
                            spacing: dp(5)
                            pos_hint: {'center_x': 0.5, 'center_y': 0.5}

                            MDLabel:
                                text: "Height (m)"
                                halign: "left"
                                theme_text_color: "Custom"
                                text_color: app.colors["White"]

                            MDTextField:
                                id: height_input
                                multiline: False
                                size_hint_x: None
                                width: dp(100)
                                halign: "center"
                                hint_text: " "
                                mode: "fill"
                                fill_color: app.colors["White"]
                                hint_text_color_normal: app.colors["Black"]
                                hint_text_color_focus: app.colors["Light Orange"]

                        BoxLayout:
                            orientation: 'horizontal'
                            size_hint_y: None
                            height: self.minimum_height
                            padding: dp(20)
                            spacing: dp(5)
                            pos_hint: {'center_x': 0.5, 'center_y': 0.5}

                            MDLabel:
                                text: "Weight (kg)"
                                halign: "left"
                                theme_text_color: "Custom"
                                text_color: app.colors["White"]

                            MDTextField:
                                id: weight_input
                                multiline: False
                                halign: "center"
                                size_hint_x: None
                                width: dp(100)
                                hint_text: " "
                                mode: "fill"
                                fill_color: app.colors["White"]
                                hint_text_color_normal: app.colors["Black"]
                                hint_text_color_focus: app.colors["Light Orange"]

                        BoxLayout:
                            orientation: 'vertical'
                            size_hint_y: None
                            height: self.minimum_height
                            padding: dp(20)
                            spacing: dp(15)
                            pos_hint: {'center_x': 0.5, 'center_y': 0.5}

                            MDLabel:
                                text: "Assistance Level (%)"
                                halign: "center"
                                theme_text_color: "Custom"
                                text_color: app.colors["White"]

                            Widget:
                                id: assistance_level_slider
                            MDSlider:
                                id: assistance_level_slider
                                min: 0
                                max: 100
                                value: 50
                                size_hint_x: 0.8
                                pos_hint: {'center_x': 0.5, 'center_y': 0.5}
                                on_value: self.on_slider_value(self.value)
                            Widget:

                        MDBoxLayout:
                            orientation: 'vertical'
                            padding: dp(20)
                            spacing: dp(10)
                            size_hint_y: None
                            height: self.minimum_height
                            pos_hint: {'center_x': 0.5, 'center_y': 0.5}

                            Widget:
                            MDFillRoundFlatButton:
                                id: standup_sitdown_mode
                                text: 'STAND UP/SIT DOWN'
                                text_color: app.colors['White']
                                size_hint: None, None
                                ripple_effect: False
                                ripple_color: app.colors['Cyan']
                                on_press: self.md_bg_color = app.colors["Light Orange"]
                                on_release: self.md_bg_color = app.colors["Cyan"]
                                md_bg_color: app.colors["Cyan"]
                                width: root.width*0.4
                                height: root.height*0.05
                                pos_hint: {'center_x': 0.5, 'center_y': 0.5}
                            Widget:

                            Widget:
                            MDFillRoundFlatButton:
                                id: walk_mode
                                text: 'WALK'
                                text_color: app.colors['White']
                                size_hint: None, None
                                ripple_effect: False
                                ripple_color: app.colors['Cyan']
                                on_press: self.md_bg_color = app.colors["Light Orange"]
                                on_release: self.md_bg_color = app.colors["Cyan"]
                                md_bg_color: app.colors["Cyan"]
                                width: root.width*0.4
                                height: root.height*0.05
                                pos_hint: {'center_x': 0.5, 'center_y': 0.5}
                            Widget:

                            Widget:
                            MDFillRoundFlatButton:
                                id: stop_mode
                                text: 'STOP'
                                text_color: app.colors['White']
                                size_hint: None, None
                                ripple_effect: False
                                ripple_color: app.colors['Cyan']
                                on_press: self.md_bg_color = app.colors["Light Orange"]
                                on_release: self.md_bg_color = app.colors["Cyan"]
                                md_bg_color: app.colors["Cyan"]
                                width: root.width*0.4
                                height: root.height*0.05
                                pos_hint: {'center_x': 0.5, 'center_y': 0.5}
                            Widget:
    # -------------------------------------------- Menú de Sintonización --------------------------------------------
            MDBottomNavigationItem:
                id: tuning_tab
                name: "Tuning mode"
                text: "Tuning mode"
                icon: "equalizer"

                # Acciones 
                on_tab_release:
                    app.on_tab_select(tuning_tab.name)

                BoxLayout:
                    orientation: 'vertical'
                    canvas.before:
                        Color:
                            rgba: app.colors["Dark Blue"]
                        Rectangle:
                            pos: self.pos
                            size: self.size

                # -------------------------------- Fondo del menú --------------------------
                # Elements
                FloatLayout:
                    orientation: "vertical"
                    pos_hint: {"center_y": 0.5, "center_x": 0.5}
                    halign: "center"
                    valign: "center"

                    canvas.before:
                        Color:
                            rgba: app.colors["Dark Blue"]
                        Rectangle:
                            pos: self.pos
                            size: self.size
                    GridLayout: # Distribución principal del menú como GridLayout de 5 filas
                        rows: 5
                        cols: 1
                        padding: dp(10), dp(10)
                        spacing: dp(5)

                        # ----------------------- Título del Menú -------------------------------------------- 
                        BoxLayout: 
                            orientation: "vertical"
                            pos_hint: {"center_x": 0.5, "center_y": 0.5}
                            size_hint: None, None
                            size: (root.width, dp(50))
                            
                            CustomLabelAD: # ROW 1 
                                id: tuning_label
                                text: "Tuning Mode"
                                size: self.size
                                pos: self.pos
                                pos_hint: {"center_x": 0.5, "center_y": 0.5}
                            
                        # ----------------------- Menú desplegable para la selección de la articulación ------------
                        BoxLayout: 
                            orientation: "vertical"
                            size_hint: None, None
                            size: (root.width*0.95, dp(50))
                            pos_hint: {"center_x": 0.5, "center_y": 0.5}

                            Spinner:
                                id: limb_dropdown
                                text: "Right leg"
                                values: ["Right leg", "Left leg", "Right arm", "Left arm"] # Valores del menú desplegable
                                
                                # Personalización
                                orientation: "verical"
                                size_hint: None, None
                                size: (dp(200), dp(45))
                                pos_hint: {"center_x": 0.5, "center_y": 0.5}  # Se centra

                                # Definición de colores
                                background_color: app.colors["Light Gray"]
                                color: app.colors["White"]
                                
                                # Acciones
                                on_text: app.limb_dropdown_clicked(limb_dropdown.text)
                        
                        # --------------------------- Parámetros PI del motor 1 ------------------------- 
                        BoxLayout: #ROW 3 
                            orientation: "vertical"
                            padding: (dp(10), dp(10))
                            spacing: dp(5)
                            size_hint: None, None
                            size: (root.width*0.95,dp(150))
                            pos_hint: {"center_x": 0.5, "center_y": 0.5}

                            CustomLabelRoboto: 
                                id: motor1_label
                                text: "Hip motor"

                            # ------------- Parámetros PI ------------- 
                            GridLayout:
                                rows: 1
                                cols: 3
                                padding: (dp(10), dp(10))
                                spacing: dp(10)
                                size_hint: None, None
                                size: (root.width*0.85, dp(35))
                                pos_hint: {"center_x":  0.5, "center_y": 0.5}

                                CustomTextEntry: # col 1
                                    id: kc_motor1
                                    hint_text: "Kc:"
                                    on_text_validate:
                                        app.on_entry_text("kc", "motor1", kc_motor1.text)
                                CustomTextEntry: # col 2
                                    id: ti_motor1
                                    hint_text: "Ti:"
                                    on_text_validate:
                                        app.on_entry_text("ti", "motor1", ti_motor1.text)

                                # -------- Referencia del motor 1 -------
                                CustomTextEntry: # col 3
                                    id: sp_motor1
                                    hint_text: "SP:"
                                    on_text_validate:
                                        app.on_entry_text("sp", "motor1", sp_motor1.text)

                            # ------------- Valor del motor 1 ------------- 
                            BoxLayout:
                                orientation: "vertical"
                                size_hint: None, None
                                pos_hint: {"center_x": 0.5, "center_y": 0.5}
                                CustomTextEntry:
                                    id: pv_motor1
                                    hint_text: "PV:"
                                    on_text_validate:
                                        app.on_entry_text("pv", "motor1", pv_motor1.text)

                        # --------------------------- Parámetros PI del motor 2 ------------------------- 
                        BoxLayout: #ROW 4
                            orientation: "vertical"
                            padding: (dp(10), dp(10))
                            spacing: dp(10)
                            size_hint: None, None
                            size: (root.width*0.95,dp(150))
                            pos_hint: {"center_x": 0.5, "center_y": 0.5}

                            CustomLabelRoboto: 
                                id: motor2_label
                                text: "Knee motor"

                            # ------------- Parámetros PI ------------- 
                            GridLayout:
                                rows: 1
                                cols: 3
                                padding: (dp(10), dp(10))
                                spacing: dp(10)
                                size_hint: None, None
                                size: (root.width*0.85, dp(35))
                                pos_hint: {"center_x":  0.5, "center_y": 0.5}

                                CustomTextEntry: # col 1
                                    id: kc_motor2
                                    hint_text: "Kc:"
                                    on_text_validate:
                                        app.on_entry_text("kc", "motor2",kc_motor2.text)
                                CustomTextEntry: # col 2
                                    id: ti_motor2
                                    hint_text: "Ti:"
                                    on_text_validate:
                                        app.on_entry_text("ti", "motor2",ti_motor2.text)
                                # ---------- Referencia del motor 2 -----------
                                CustomTextEntry: # col 3
                                    id: sp_motor2
                                    hint_text: "SP:"
                                    on_text_validate:
                                        app.on_entry_text("sp", "motor2",sp_motor2.text)
                            
                            # ------------- Valor del motor 2 ------------- 
                            BoxLayout:
                                orientation: "vertical"
                                size_hint: None, None
                                pos_hint: {"center_x": 0.5, "center_y": 0.5}
                                CustomTextEntry:
                                    id: pv_motor2
                                    hint_text: "PV:"
                                    on_text_validate:
                                        app.on_entry_text("pv", "motor2", pv_motor2.text)

                        # --------------------------- Parámetros PI del motor 3 ------------------------- 
                        BoxLayout: #ROW 5
                            orientation: "vertical"
                            padding: (dp(10), dp(10))
                            spacing: dp(10)
                            size_hint: None, None
                            size: (root.width*0.95,dp(150))
                            pos_hint: {"center_x": 0.5, "center_y": 0.5}

                            CustomLabelRoboto: 
                                id: motor3_label
                                text: "Ankle motor"

                            # --------------------- Parámetros PI ------------------------
                            GridLayout:
                                rows: 1
                                cols: 3
                                padding: (dp(10), dp(10))
                                spacing: dp(10)
                                size_hint: None, None
                                size: (root.width*0.85, dp(35))
                                pos_hint: {"center_x":  0.5, "center_y": 0.5}

                                CustomTextEntry: # col 1
                                    id: kc_motor3
                                    hint_text: "Kc:"
                                    on_text_validate:
                                        app.on_entry_text("kc", "motor3",kc_motor3.text)
                                CustomTextEntry: # col 2
                                    id: ti_motor3
                                    hint_text: "Ti:"
                                    on_text_validate:
                                        app.on_entry_text("ti", "motor3",ti_motor3.text)
                                # ----------- Referencia del motor 3 -------------------
                                CustomTextEntry: # col 3
                                    id: sp_motor3
                                    hint_text: "SP:"
                                    on_text_validate:
                                        app.on_entry_text("sp", "motor3",sp_motor3.text)
                            # ------------------ Valor del motor 3 ------------------------
                            BoxLayout:
                                orientation: "vertical"
                                size_hint: None, None
                                pos_hint: {"center_x": 0.5, "center_y": 0.5}
                                CustomTextEntry:
                                    id: pv_motor3
                                    hint_text: "PV:"
                                    on_text_validate:
                                        app.on_entry_text("pv", "motor3", pv_motor3.text)

# --------------------------------------- Ventana secundaria ----------------------------------------------   
<SecundaryWindow>:
    # Empty
    name: "Secundary Window"

# Funciones para dar formato a la lista de dispositivos
# Se le da formato al texto del menú de dispositivos
<SelectableLabel@MDLabel>:
    size_hint_y: None
    height: self.texture_size[1]
    halign: 'center'
    valign: 'middle'
    theme_text_color: 'Custom'
    text_color: app.colors['White']
    on_touch_down:
        self.parent.parent.parent.select_with_touch(self.index, 'down')
#Aqui se le da formato a la caja que contiene dicho menú 
<SelectableRecycleBoxLayout@RecycleBoxLayout>:
    default_size: None, dp(56)
    default_size_hint: 1, None
    size_hint_y: None
    height: self.minimum_height
    orientation: 'vertical'
    
