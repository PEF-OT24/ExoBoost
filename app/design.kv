#:kivy 2.2.1
# --------------------------------------- Predefinición de clases para generalizar formato ----------------------------------------

# Librería y clase para dar formato a menu desplegable (Pantalla de tunning)
#: import Factory kivy.factory.Factory
<sp@SpinnerOption>:
    color: app.colors['White']
    background_color: app.colors['Dark Blue']

# Clase predefinida para los subtítulos con formato
<CustomLabelRoboto>: 
    font_name: "Roboto" # Roboto para texto y subtítulos
    font_size: "15sp" 
    halign: "center"
    pos_hint: {"center_x": 0.5, "center_y": 0.5, "top": 0}
    theme_text_color: "Custom"
    text_color: app.colors["White"]

# Clase predefinida para los títulos con formato
<CustomLabelAD>: 
    font_name: "fonts/ADLaMDisplay-Regular.ttf" # ADLaMdisplay para títulos
    font_size: "30sp" # 30sp para títulos
    halign: "center"
    pos_hint: {"center_x": 0.5, "center_y": 0.5, "top": 1}
    theme_text_color: "Custom"
    text_color: app.colors["White"]

# Clase predefinida para las entradas de texto con formato
<CustomTextEntry>: 
    pos_hint: {"center_x": 0.5, "center_y": 0.5}  # Centrado
    height: dp(20)
    halign: "center"
    font_size: "12sp"
    input_type: 'number' # Indicación para abrir el teclado numérico
    hint_text_color_normal: app.colors["Black"]  # En negro cuando no está seleccionado
    hint_text_color_focus: app.colors["Light Orange"]   # En naranja cuando está seleccionado 
    helper_text_mode: "on_focus"
    hint_text: "Fill mode"
    mode: "fill"
    fill_color: app.colors["Light Gray"]

# Clase para dar formato a dispositivos desplegados configurados como botones
<ButtonDevices>: 
    text: ""
    #size_hint_y: None
    size_hint_x: None
    #height: dp(200)  # Altura fija para cada fila
    #width: root.width
    width: dp(200)
    #adjust_width: True
    #width: device_list.width
    #size: self.size
    pos_hint: {"center_x": 0.5, "center_y": 0.5}  # Centrado

    # Texto dentro del boton
    font_size: "12sp"
    font_name: "Roboto"
    theme_text_color: "Custom"
    text_color: app.colors["White"]
    # halign: 'left'
    # Fondo del boton y efectos
    md_bg_color: app.colors["Dark Blue"]
    ripple_effect: False
    ripple_color: app.colors['Dark Blue']
    on_press: self.md_bg_color = app.colors['Light Orange']
    # on_release: self.md_bg_color = app.colors['Dark Blue']

# Clase predefinida para dar formato a botones que seleccionan el parámetro de operación 
<ButtonParameters>:
    # Personalización de tamaño
    size_hint: None, None
    width: dp(30)
    pos_hint: {"center_x": 0.5, "center_y": 0.5}
    font_name: "Roboto"
    theme_text_color: "Custom"

    # Personalización de color
    text_color: app.colors["White"]
    md_bg_color: app.colors["Cyan"]
    background_normal: app.colors['Cyan']
    background_down: app.colors['Light Orange']
    font_color_normal: app.colors['White']
    font_color_down: app.colors['White']

# Ventana de pop-up de Error
<ErrorPopup>: 
    title: 'Error'
    size_hint: None, None
    size: 400, 200
    auto_dismiss: False

    BoxLayout:
        orientation: 'vertical'
        padding: 10
        spacing: 10

        Label:
            id: error_popup
            text: 'An error has occurred!'
            font_size: 18

        Button:
            text: 'Close'
            size_hint_y: None
            height: '48dp'
            on_release: root.dismiss()

# Pop-up de información sobre los motores
<MotorPopup>:
    auto_dismiss: False
    title: 'Información del motor'
    title_align: "center"
    title_font: 'fonts/ADLaMDisplay-Regular.ttf'
    title_size: dp(20)
    title_color: app.colors["White"]
    pos_hint: {'center_x': 0.5, 'center_y': 0.5} # Se centra el pop up
    
    background_color: app.colors["Blue"]
    separator_color: 0,0,0,0

    size_hint: None, None
    size: dp(300), dp(600)
    canvas.before:
        Color:
            rgba: app.colors["Cyan"] # Fondo blanco
        RoundedRectangle: # Con esquinas redondeadas
            pos: self.pos
            size: self.size
            radius: [10, 10, 10, 10]  

    BoxLayout:
        orientation: 'vertical'
        padding: (dp(10), dp(10))
        spacing: dp(10)
        canvas.before:
            Color:
                rgba: app.colors["Dark Cyan"] 
            RoundedRectangle: # Con esquinas redondeadas
                pos: self.pos
                size: self.size
                radius: [10, 10, 10, 10]  
        
    # --- Características técnicas ---
        ScrollView: # Menú de los participantes
            size_hint: 1, 1
            pos_hint: {"center_x": 0.5, "center_y": 0.5}
            GridLayout: 
                id: motors_grid
                cols: 2
                padding: dp(10)
                spacing: dp(15)
                size_hint_y: None
                minimum_height: self.minimum_height

        # Botón de exit
        MDFillRoundFlatButton:
            id: exit_button
            text: 'Cerrar'
            text_color: app.colors['Black']
            size_hint: None, None
            size: '100dp','30dp'
            ripple_effect: False
            ripple_color: app.colors['Cyan']
            md_bg_color: app.colors["Cyan"]
            pos_hint: {'center_x':0.5,'center_y':0.5}
                
            on_press: 
                self.md_bg_color = app.colors["Light Orange"]
            on_release: 
                self.md_bg_color = app.colors["Cyan"]
                root.dismiss()

# Pop-up para el proceso de calibración
<CalibratePopup>:
    # Título
    auto_dismiss: False
    title: 'Calibración'
    title_align: "center"
    title_font: 'fonts/ADLaMDisplay-Regular.ttf'
    title_size: dp(20)
    title_color: app.colors["White"]
    pos_hint: {'center_x': 0.5, 'center_y': 0.5} # Se centra el pop up
    
    background_color: app.colors["Blue"]
    separator_color: 0,0,0,0

    size_hint: None, None
    size: dp(350), dp(300)
    canvas.before:
        Color:
            rgba: app.colors["Cyan"] # Fondo blanco
        RoundedRectangle: # Con esquinas redondeadas
            pos: self.pos
            size: self.size
            radius: [10, 10, 10, 10]  

    BoxLayout:
        orientation: 'vertical'
        padding: (dp(10), dp(10))
        spacing: dp(10)
        canvas.before:
            Color:
                rgba: app.colors["Dark Cyan"] 
            RoundedRectangle: # Con esquinas redondeadas
                pos: self.pos
                size: self.size
                radius: [10, 10, 10, 10]  
        
    # --- Contenido ---
        ScrollView: # Menú de los participantes
            size_hint: 1, 1
            pos_hint: {"center_x": 0.5, "center_y": 0.5}
            BoxLayout:
                orientation: 'vertical'
                padding: (dp(10), dp(10))
                spacing: dp(10)
                pos_hint: {"center_x": 0.5, "center_y": 0.5}

                CustomLabelRoboto:
                    id: label_info
                    text: app.info_calibracion
                    font_size: "14sp"

        # Botón de exit
        MDFillRoundFlatButton:
            id: calibrar_button
            text: 'Calibrar'
            text_color: app.colors['Black']
            size_hint: None, None
            size: '100dp','30dp'
            ripple_effect: False
            ripple_color: app.colors['Cyan']
            md_bg_color: app.colors["Cyan"]
            pos_hint: {'center_x':0.5,'center_y':0.5}
                
            on_press: 
                self.md_bg_color = app.colors["Light Orange"]
            on_release: 
                self.md_bg_color = app.colors["Cyan"]
                app.perform_calibration()
            
# -------------- Ventana de PopUp de Información --------------
<LabelTeam>:
    size_hint_y: None
    height: dp(100)  # Altura fija para cada fila
    font_size: "12sp"
    font_name: "Roboto"
    theme_text_color: "Custom"
    text_color: app.colors["Black"]
    halign: "center"
    pos_hint: {"center_x": 0.5, "center_y": 0.5}

<ImageTeam>: # Formato de las imágenes dentro del popup
    size_hint: None, None
    size: dp(80), dp(80)  # Tamaño fijo para cada imagen
    pos_hint: {"center_x": 0.5, "center_y": 0.5}

<InfoPopUp>: # Estructura del popup
    auto_dismiss: False
    title: 'Información del equipo'
    title_align: "center"
    title_font: 'fonts/ADLaMDisplay-Regular.ttf'
    title_size: dp(20)
    title_color: app.colors["White"]
    pos_hint: {'center_x': 0.5, 'center_y': 0.5} # Se centra el pop up
    
    background_color: app.colors["Blue"]
    separator_color: 0,0,0,0

    size_hint: None, None
    size: dp(300), dp(600)
    canvas.before:
        Color:
            rgba: app.colors["Cyan"] # Fondo blanco
        RoundedRectangle: # Con esquinas redondeadas
            pos: self.pos
            size: self.size
            radius: [10, 10, 10, 10]  

    BoxLayout:
        orientation: 'vertical'
        padding: (dp(10), dp(10))
        spacing: dp(10)
        canvas.before:
            Color:
                rgba: app.colors["Dark Cyan"] 
            RoundedRectangle: # Con esquinas redondeadas
                pos: self.pos
                size: self.size
                radius: [10, 10, 10, 10]  
        
    # ---  Información del proyecto ---
        BoxLayout: 
            orientation: "vertical"
            size_hint: 1, None
            height: dp(150)
            pos_hint: {"center_x": 0.5, "center_y": 0.5}
            CustomLabelRoboto:
                id: label_info
                text: app.info_project
                font_size: "12sp"
        
        MDFillRoundFlatButton: # Botón de acceso al repositorio
            id: repo_button
            text: 'Abrir repositorio en github'
            text_color: app.colors['Black']
            size_hint: None, None
            size: '100dp','30dp'
            ripple_effect: False
            ripple_color: app.colors['Cyan']
            md_bg_color: app.colors["Cyan"]
            pos_hint: {'center_x':0.5,'center_y':0.5}
                
            on_press: 
                self.md_bg_color = app.colors["Light Orange"]
            on_release: 
                self.md_bg_color = app.colors["Cyan"]
                app.open_repo()

    # --- Información del equipo ---
        BoxLayout: # Título para los participantes
            size_hint: None, None
            size: dp(280), dp(30)
            pos_hint: {"center_x": 0.5, "center_y": 0.5}

            CustomLabelAD:
                font_size: "20sp"
                text: "Equipo PEF-OT24"


        ScrollView: # Menú de los participantes
            size_hint: 1, 1
            pos_hint: {"center_x": 0.5, "center_y": 0.5}
            GridLayout: 
                id: team_grid
                cols: 2
                padding: dp(10)
                spacing: dp(15)
                size_hint_y: None
                height: self.minimum_height

        # Botón de exit
        MDFillRoundFlatButton:
            id: exit_button
            text: 'Cerrar'
            text_color: app.colors['Black']
            size_hint: None, None
            size: '100dp','30dp'
            ripple_effect: False
            ripple_color: app.colors['Cyan']
            md_bg_color: app.colors["Cyan"]
            pos_hint: {'center_x':0.5,'center_y':0.5}
                
            on_press: 
                self.md_bg_color = app.colors["Light Orange"]
            on_release: 
                self.md_bg_color = app.colors["Cyan"]
                root.dismiss()

# --------------------------------------- Establecer prioridad en las ventanas ----------------------------------------
WindowManager:
    SplashScreen:
    MainWindow:
    SecundaryWindow:

# --------------------------------------- Ventana de Inicio de Aplicación ---------------------------------------
<SplashScreen>:
    name: 'Splash Screen'
    BoxLayout:
        orientation: 'vertical'
        # Background color
        canvas.before:
            Color:
                rgba: app.colors["Black"]
            Rectangle:
                pos: self.pos
                size: self.size
        Widget:
            size_hint_y: 0.2
        # Logo de la app
        Image:
            source: 'images/PossibleLogoW.png'
            size_hint: None, None
            size: dp(100),dp(100)
            pos_hint: {'center_x':0.5}
        # Título de la app
        CustomLabelAD:
            id: start_text
            text: "ExoBoost"
            size_hint_y: None
            height: self.texture_size[1]
            pos_hint: {'center_x':0.5}
        Widget:
            size_hint_y: 0.3

# --------------------------------------- Ventana principal ----------------------------------------
<MainWindow>:
    name: "Main Window"

    BoxLayout: # Caja principal
        orientation: 'vertical'
        halign: "center"
        valign: "center"
        pos_hint: {"center_y": 0.5, "center_x": 0.5}

    # ------------------------------ Barra titular principal superior -------------------------
        MDTopAppBar:
            md_bg_color: app.colors["Black"]
            #left_action_items: [['images/PossibleLogoW.png',lambda x: None]]
            title: "ExoBoost"
            font_name: 'fonts/ADLaMDisplay-Regular.ttf'
            pos_hint: {'left':0.5,'center_y':0.5} 
            # type: "small"
            # size_hint_x: .8
            # pos_hint: {"center_x":.5,"center_y":.5}
            # MDTopAppBarLeadingButtonContainer:
            #     MDActionTopAppBarButton:
            #         #icon: 'images/PossibleLogoW.png'
            #         icon: "menu"

            # MDTopAppBarTitle:
            #     text: "ExoBoost"
            #     font_name: 'fonts/ADLaMDisplay-Regular.ttf'
            #     pos_hint: {"center_x":.5}

            # MDTopAppBarTrailingButtonContainer:
            #     MDActionTopAppBarButton:


    # ---------------------- Se define la arquitectura base como un menú de navegación inferior -----------------------
        MDBottomNavigation:
            id: bottom_nav
            panel_color: app.colors["Black"]

            # Establecer colores para los estados de selección
            text_color_normal: app.colors["Cyan"]
            text_color_active: app.colors["Light Orange"]
            icon_color_normal: app.colors["Cyan"]
            icon_color_active: app.colors["Light Orange"]

    # ---------------------------------------------- Menú de Bluetooth -------------------------------------------------- 
            MDBottomNavigationItem:
                # Configuraciones del menú de bluetooth
                id: bluetooh_tab
                name: "Bluetooth settings"
                text: "Bluetooth"
                icon: "bluetooth-settings"

                # Acciones 
                on_tab_release:
                    app.on_tab_select(bluetooh_tab.name)

                # Tab design
                BoxLayout:
                    orientation: 'vertical'
                    # Background color
                    canvas.before:
                        Color:
                            rgba: app.colors["Dark Blue"]
                        Rectangle:
                            pos: self.pos
                            size: self.size

                    # Elements on app
            # -------------------- Título del menú --------------------------
                    CustomLabelAD:
                        id: bluetooth_title
                        text: "Bluetooth Connection"

            # -------------------- Botón para buscar dispositivos -------------------                      
                    BoxLayout:
                        Widget:
                        MDFillRoundFlatButton:
                            id: bluetooth_device_search
                            text: 'Search Devices'
                            text_color: app.colors['White']
                            size_hint: None, None
                            size: '200dp','50dp'
                            ripple_effect: False
                            ripple_color: app.colors['Cyan']
                            on_press: 
                                self.md_bg_color = app.colors["Light Orange"]
                                app.search_devices()
                            on_release: 
                                self.md_bg_color = app.colors["Cyan"]
                            md_bg_color: app.colors["Cyan"]
                            pos_hint: {'center_x':0.5,'center_y':0.5}
                            height: root.height*0.065
                            width: root.width*0.5
                        Widget:
                # Spinner que gira mientras se buscan dispositivos
                    MDSpinner:
                        id: loading_spinner
                        size_hint: None, None
                        size: dp(46), dp(46)
                        color: app.colors['Light Orange']
                        pos_hint: {'center_x':0.5,'center_y':0.5}
                        active: False
            # ------------------ Menu con dispositivos disponibles ------------------------
                    ScrollView:
                        id: devices_scroll
                        pos_hint: {'center_x':0.5}
                        size_hint_x: None
                        adaptative_width: True
                        width: root.width*0.4
                        height: self.height
                        do_scroll_y: True
                        scroll_type: ['bars','content']
                        bar_margin: 3
                        bar_width: 5
                        bar_color: app.colors['Light Orange']
                        bar_inactive_color: app.colors['Light Orange']
                        effect_cls: "DampedScrollEffect"
                        
                        GridLayout:
                            id: device_list
                            cols: 1
                            size_hint_y: None
                            pos_hint: {'center_x':0.5}
                            height: self.minimum_height
                            width: devices_scroll.width
                            on_children:
                                self.height = self.minimum_height
                    
                    #Label para describir estado de conexión Bluetooth
                    MDLabel:
                        id: bt_state
                        text: "Connection State"
                        font_name: "Roboto" # Roboto para texto y subtítulos
                        font_size: "15sp" 
                        halign: "center"
                        pos_hint: {"center_x": 0.5, "center_y": 0.5, "top": 0}
                        theme_text_color: "Custom"
                        text_color: app.colors["Cyan"]

            #-------------------- Botón para conectarse/desconectarse a un dispositivo ----------------------------
                    BoxLayout:
                        size_hint_y: None
                        height: '50 dp'
                        Widget:
                        MDFillRoundFlatButton:
                            id: bluetooth_connect
                            text: 'Connect'
                            text_color: app.colors['White']
                            size_hint: None, None
                            ripple_effect: False
                            ripple_color: app.colors['Cyan']
                            on_press: 
                                self.md_bg_color = app.colors["Light Orange"]
                            on_release: 
                                self.md_bg_color = app.colors["Cyan"]
                                app.connect_disconnect()
                            width: root.width*0.5
                            height: root.height*0.065
                            md_bg_color: app.colors["Cyan"]
                            pos_hint: {'center_x':0}
                        Widget:
                    #Esto es solo para crear un espacio abajo (design choice)
                    Widget:
                        size_hint_y: None
                        height: '48dp'
    # ---------------------------------------------- Menú de Asistencia -------------------------------------------------- 
            # ------------------- Item de navegación horizontal -------------------------
            MDBottomNavigationItem:
                id: assistance_tab
                name: "Assistance mode"
                text: "Assistance"
                icon: "walk"
                
                # Acciones 
                on_tab_release:
                    app.on_tab_select(assistance_tab.name)
        # --------------------------------- Layout General --------------------------------------
                BoxLayout:
                    orientation: 'vertical'
                    padding: dp(5)
                    spacing: dp(5)
                    pos_hint: {'center_x': 0.5, 'center_y': 0.5}
                    canvas.before:
                        Color:
                            rgba: app.colors["Dark Blue"]
                        Rectangle:
                            pos: self.pos
                            size: self.size

            # --------------------------- Titulo del menú --------------------------   
                    BoxLayout: #1
                        orientation: 'vertical'
                        # Tamaño
                        size_hint_y: 0.15

                        # Espaciados
                        padding: dp(5)
                        spacing: dp(5)
                        CustomLabelAD:
                            text: "Assistance Mode"
            
            # -------------------------- Datos del usuario -------------------------- 
                    BoxLayout: #2
                        orientation: 'vertical'
                        size_hint_y: 0.3
                        padding: dp(5)
                        spacing: dp(5)
                        pos_hint: {'center_x': 0.5, 'center_y': 0.5}

                        BoxLayout:
                            orientation: 'horizontal'
                            size_hint_y: None
                            height: self.minimum_height
                            padding: dp(20)
                            spacing: dp(5)
                            pos_hint: {'center_x': 0.5, 'center_y': 0.5}

                    # ------------------------ Peso ----------------------------
                        BoxLayout:
                            orientation: 'horizontal'
                            size_hint_y: None
                            height: self.minimum_height
                            padding: dp(20)
                            spacing: dp(5)
                            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
                            
                            MDLabel:
                                text: "Weight (kg)"
                                halign: "left"
                                theme_text_color: "Custom"
                                text_color: app.colors["White"]

                            CustomTextEntry:
                                id: weight_input
                                multiline: False
                                halign: "center"
                                size_hint_x: None
                                width: dp(100)
                                hint_text: " "
                                mode: "fill"
                                fill_color: app.colors["White"]
                                hint_text_color_normal: app.colors["Black"]
                                hint_text_color_focus: app.colors["Light Orange"]

                                on_text_validate:  
                                    app.on_entry_text("weight", "user", weight_input.text)
                            
                    # # ------------------------ Altura -----------------------
                    #         MDLabel:
                    #             text: "Height (m)"
                    #             halign: "left"
                    #             theme_text_color: "Custom"
                    #             text_color: app.colors["White"]

                    #         MDTextField:
                    #             id: height_input
                    #             multiline: False
                    #             size_hint_x: None
                    #             width: dp(100)
                    #             halign: "center"
                    #             hint_text: " "
                    #             mode: "fill"
                    #             fill_color: app.colors["White"]
                    #             hint_text_color_normal: app.colors["Black"]
                    #             hint_text_color_focus: app.colors["Light Orange"]

                    #             on_text_validate:  
                    #                 app.on_entry_text("height", "user", height_input.text)

                    # ------------------------ Fase de la marcha -----------------------
                    

            #-------------------------- Botón de Calibración ---------------------------------
                    BoxLayout: #3
                        orientation: 'vertical'
                        # size_hint_y: None
                        # height: self.minimum_height
                        size_hint_y: 0.15
                        padding: dp(10)
                        spacing: dp(10)
                        pos_hint: {'center_x': 0.5, 'center_y': 0.5}
                        
                        MDFillRoundFlatButton:
                            id: calibrate_button
                            text: 'Calibrar'
                            text_color: app.colors['White']
                            size_hint: None, None
                            ripple_effect: False
                            ripple_color: app.colors['Cyan']
                            on_press: 
                                self.md_bg_color = app.colors["Light Orange"]
                                app.calibrate()
                            on_release: self.md_bg_color = app.colors["Cyan"]
                            md_bg_color: app.colors["Cyan"]
                            size: 
                            width: root.width*0.4
                            height: root.height*0.05
                            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
                        
            #-------------------------- Botones de acción ---------------------------------
                    BoxLayout: #4
                        orientation: 'vertical'
                        padding: dp(20)
                        spacing: dp(10)
                        # size_hint_y: None
                        # height: self.minimum_height
                        size_hint_y: 0.4
                        pos_hint: {'center_x': 0.5, 'center_y': 0.5}
                # ------------------ Botón para pararse y sentarse ------------------
                        MDFillRoundFlatButton:
                            id: standup_sitdown_mode
                            text: 'STAND UP'
                            text_color: app.colors['White']
                            size_hint: None, None
                            ripple_effect: False
                            ripple_color: app.colors['Cyan']
                            on_press: 
                                self.md_bg_color = app.colors["Light Orange"]
                                app.sit_down_stand_up()
                            on_release: self.md_bg_color = app.colors["Cyan"]
                            md_bg_color: app.colors["Cyan"]
                            width: root.width*0.4
                            height: root.height*0.05
                            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
                # -------------------- Botón para caminar ----------------------------
                        MDFillRoundFlatButton:
                            id: walk_mode
                            text: 'WALK'
                            text_color: app.colors['White']
                            size_hint: None, None
                            ripple_effect: False
                            ripple_color: app.colors['Cyan']
                            on_press: 
                                self.md_bg_color = app.colors["Light Orange"]
                                app.walk()
                            on_release: self.md_bg_color = app.colors["Cyan"]
                            md_bg_color: app.colors["Cyan"]
                            width: root.width*0.4
                            height: root.height*0.05
                            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
                # -------------------- Botón para detenerse ---------------------        
                        MDFillRoundFlatButton:
                            id: stop_mode
                            text: 'STOP'
                            text_color: app.colors['White']
                            size_hint: None, None
                            ripple_effect: False
                            ripple_color: app.colors['Cyan']
                            md_bg_color: app.colors["Cyan"]
                            width: root.width*0.4
                            height: root.height*0.05
                            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
                            on_press: 
                                self.md_bg_color = app.colors["Light Orange"]
                                app.stop()
                            on_release: self.md_bg_color = app.colors["Cyan"]
    # -------------------------------------------- Menú de Sintonización --------------------------------------------
            MDBottomNavigationItem:
                id: tuning_tab
                name: "Tuning mode"
                text: "Tuning"
                icon: "equalizer"

                # Acciones 
                on_tab_release:
                    app.on_tab_select(tuning_tab.name)

                BoxLayout:
                    orientation: 'vertical'
                    canvas.before:
                        Color:
                            rgba: app.colors["Dark Blue"]
                        Rectangle:
                            pos: self.pos
                            size: self.size

            # ------------------------------------ Fondo del menú --------------------------------------
                # Elements
                FloatLayout:
                    orientation: "vertical"
                    pos_hint: {"center_y": 0.5, "center_x": 0.5}
                    halign: "center"
                    valign: "center"
                    spacing: dp(5)


                    canvas.before:
                        Color:
                            rgba: app.colors["Dark Blue"]
                        Rectangle:
                            pos: self.pos
                            size: self.size
                    GridLayout: # Distribución principal del menú como GridLayout de 9 filas
                        rows: 7
                        cols: 1
                        padding: dp(10)
                        spacing: dp(15)

            # ---------------------------------- Título del Menú -------------------------------------------- 
                        BoxLayout: # ROW 1 Título general
                            orientation: "vertical"
                            pos_hint: {"center_x": 0.5, "center_y": 0.5}
                            size_hint: None, None
                            size: (root.width, dp(50))

                            CustomLabelAD: 
                                id: tuning_label
                                text: "Tuning Mode"
                                size: self.size
                                pos: self.pos
                                pos_hint: {"center_x": 0.5, "center_y": 0.5}
                            
            # ----------------------- Menú desplegable para la selección de la articulación ------------
                        BoxLayout: # ROW 2 selección de la articulación
                            orientation: "vertical"
                            size_hint: None, None
                            size: (root.width*0.95, dp(50))
                            pos_hint: {"center_x": 0.5, "center_y": 0.5}
                            
                            GridLayout: 
                                rows: 1
                                cols: 5
                                padding: dp(5), dp(5)
                                spacing: dp(5)
                                
                                BoxLayout: # Espacio en blanco

                                MDIconButton:
                                    id: upload_pid
                                    icon: "upload-multiple"
                                    pos_hint: {'center_x': 0.5, 'center_y': 0.5}
                                    theme_icon_color: "Custom"
                                    icon_color: app.colors['White']
                                    
                                    on_press: 
                                        self.md_bg_color = app.colors['Light Orange']
                                        app.send_params()
                                    on_release: self.md_bg_color = app.colors['Cyan']

                                    md_bg_color: app.colors['Cyan']

                                # ---- Dropdown menu para seleccionar la extremidad----
                                Spinner:
                                    id: limb_dropdown
                                    text: "Right leg"
                                    values: ["Right leg", "Left leg", "Right arm", "Left arm"] # Valores del menú desplegable
                                    
                                    # Personalización
                                    size_hint: None, None
                                    size: (dp(100), dp(45))
                                    
                                    pos_hint: {"center_x": 0.5, "center_y": 0.5}  # Se centra
                                    sync_height: True
                                    #height: dp(45)

                                    # Definición de colores
                                    background_color: app.colors["Dark Blue"]
                                    color: app.colors["Cyan"]
                                    
                                    # Acciones
                                    on_text: app.limb_dropdown_clicked(limb_dropdown.text)
                                    option_cls: Factory.sp #Formato personalizado al inicio
                                # BoxLayout:
                                #     orientation: "vertical"

                                # ---- Botón para subir el set point ----
                                MDIconButton:
                                    id: upload_sp
                                    icon: "upload"
                                    pos_hint: {'center_x': 0.5, 'center_y': 0.5}
                                    theme_icon_color: "Custom"
                                    icon_color: app.colors['White']
                                    
                                    on_press: 
                                        self.md_bg_color = app.colors['Light Orange']
                                        app.send_sp()
                                    on_release: self.md_bg_color = app.colors['Cyan']
                                    md_bg_color: app.colors['Cyan']

                                BoxLayout: # Espacio en blanco 

                        BoxLayout: # ROW 3 Selección del parámetro 
                            orientation: "horizontal"
                            pos_hint: {"center_x": 0.5, "center_y": 0.5}
                            size_hint: None, None
                            size: (root.width, dp(45))
                            # spacing: dp(15)
                            #          left   top   right   bottom
                            padding: (dp(15),dp(15),dp(15),dp(15))

                            # ---------- Botones para seleccionar variable de proceso --------
                            BoxLayout:
                                ButtonParameters: 
                                    id: process_button1
                                    group: "process_vars"
                                    text: "Position"
                                    state: "down"   # Inicialmente seleccionado
                                    
                                    on_state: app.process_var_select(self, self.state)

                            BoxLayout:
                                ButtonParameters: 
                                    id: process_button2
                                    group: "process_vars"
                                    text: "Velocity"

                                    on_state: app.process_var_select(self, self.state)
                                
                            BoxLayout:
                                ButtonParameters: 
                                    id: process_button3
                                    group: "process_vars"
                                    text: "Current"

                                    on_state: app.process_var_select(self, self.state)

                            BoxLayout:
                                ButtonParameters: 
                                    id: process_button4
                                    group: "process_vars"
                                    text: "Motion Mode"

                                    on_state: app.process_var_select(self, self.state)

            # --------------------------- Parámetros PI del motor 1 ------------------------- 
                        BoxLayout: #ROW 4
                            orientation: "vertical"
                            padding: (dp(5), dp(5))
                            spacing: dp(5)
                            size_hint_x: None
                            width: root.width*0.95
                            pos_hint: {"center_x": 0.5, "center_y": 0.5}

                            CustomLabelRoboto: 
                                id: motor1_label
                                text: "Hip motor"

                            # ------------- Parámetros PI (text entry) --------------- 
                            GridLayout:
                                rows: 1
                                cols: 3
                                padding: (dp(5), dp(5))
                                spacing: dp(5)
                                size_hint: None, None
                                size: (root.width*0.85, dp(20))
                                pos_hint: {"center_x":  0.5, "center_y": 0.5}

                                CustomTextEntry: # col 1
                                    id: kc_motor1
                                    hint_text: "Kc:"
                                    on_text_validate:
                                        app.on_entry_text("kc", "motor1", kc_motor1.text)

                                CustomTextEntry: # col 2
                                    id: ti_motor1
                                    hint_text: "Ti:"
                                    on_text_validate:
                                        app.on_entry_text("ti", "motor1", ti_motor1.text)

                                # -------- Referencia del motor 1 -------
                                CustomTextEntry: # col 3
                                    id: sp_motor1
                                    hint_text: "SP:"
                                    on_text_validate:
                                        app.on_entry_text("sp", "motor1", sp_motor1.text)

                        # ------------- Valor del motor 1 ------------- 
                        # ROW 5
                        # BoxLayout: #ROW 5
                        #     orientation: 'vertical'
                        #     padding: (dp(5), dp(5))
                        #     size_hint: 0.5, None
                        #     pos_hint: {"center_x": 0.5}
                        #     CustomTextEntry:
                        #         id: pv_motor1
                        #         size_hint: 0.2, None
                        #         height: dp(20)
                        #         pos_hint: {"center_x": 0.5}
                        #         hint_text: "PV:"
                        #         readonly: True

            # --------------------------- Parámetros PI del motor 2 ------------------------- 
                        BoxLayout: #ROW 5
                            orientation: "vertical"
                            padding: (dp(5), dp(5))
                            spacing: dp(5)
                            size_hint_x: None
                            width: root.width*0.95
                            pos_hint: {"center_x": 0.5, "center_y": 0.5}

                            CustomLabelRoboto: 
                                id: motor2_label
                                text: "Knee motor"

                            # ------------- Parámetros PI ------------- 
                            GridLayout:
                                rows: 1
                                cols: 3
                                padding: (dp(5), dp(5))
                                spacing: dp(5)
                                size_hint: None, None
                                size: (root.width*0.85, dp(20))
                                pos_hint: {"center_x":  0.5, "center_y": 0.5}

                                CustomTextEntry: # col 1
                                    id: kc_motor2
                                    hint_text: "Kc:"
                                    on_text_validate:
                                        app.on_entry_text("kc", "motor2",kc_motor2.text)
                                CustomTextEntry: # col 2
                                    id: ti_motor2
                                    hint_text: "Ti:"
                                    on_text_validate:
                                        app.on_entry_text("ti", "motor2",ti_motor2.text)
                                # ---------- Referencia del motor 2 -----------
                                CustomTextEntry: # col 3
                                    id: sp_motor2
                                    hint_text: "SP:"
                                    on_text_validate:
                                        app.on_entry_text("sp", "motor2",sp_motor2.text)
                            
                        # ------------- Valor del motor 2 ------------- 
                        # ROW 7
                        # BoxLayout: #ROW 7
                        #     orientation: 'vertical'
                        #     padding: (dp(5), dp(5))
                        #     size_hint: 0.5, None
                        #     pos_hint: {"center_x": 0.5}
                        #     CustomTextEntry:
                        #         id: pv_motor2
                        #         size_hint: 0.2, None
                        #         height: dp(20)
                        #         pos_hint: {"center_x": 0.5}
                        #         hint_text: "PV:"
                        #         readonly: True

            # --------------------------- Parámetros PI del motor 3 ------------------------- 
                        BoxLayout: #ROW 6
                            orientation: "vertical"
                            padding: (dp(5), dp(5))
                            spacing: dp(5)
                            size_hint_x: None
                            width: root.width*0.95
                            pos_hint: {"center_x": 0.5, "center_y": 0.5}

                            CustomLabelRoboto: 
                                id: motor3_label
                                text: "Ankle motor"

                            # --------------------- Parámetros PI ------------------------
                            GridLayout:
                                rows: 1
                                cols: 3
                                padding: (dp(5), dp(5))
                                spacing: dp(5)
                                size_hint: None, None
                                size: (root.width*0.85, dp(20))
                                pos_hint: {"center_x":  0.5, "center_y": 0.5}

                                CustomTextEntry: # col 1
                                    id: kc_motor3
                                    hint_text: "Kc:"
                                    on_text_validate:
                                        app.on_entry_text("kc", "motor3",kc_motor3.text)
                                CustomTextEntry: # col 2
                                    id: ti_motor3
                                    hint_text: "Ti:"
                                    on_text_validate:
                                        app.on_entry_text("ti", "motor3",ti_motor3.text)
                                # ----------- Referencia del motor 3 -------------------
                                CustomTextEntry: # col 3
                                    id: sp_motor3
                                    hint_text: "SP:"
                                    on_text_validate:
                                        app.on_entry_text("sp", "motor3",sp_motor3.text)
                        # ------------------ Valor del motor 3 ------------------------
                        
                        # BoxLayout: #ROW 9
                        #     orientation: 'vertical'
                        #     size_hint: 0.5, None
                        #     pos_hint: {"center_x": 0.5}
                        #     padding: (dp(5), dp(5))
                        #     #spacing: dp(5)

                        #     CustomTextEntry:
                        #         id: pv_motor3
                        #         size_hint: 0.2, None
                        #         height: dp(20)
                        #         pos_hint: {"center_x": 0.5}
                        #         hint_text: "PV:"
                        #         readonly: True
                        # BoxLayout: #ROW 7
                        #         orientation: "vertical"
                        #         # padding: (dp(5), dp(5))
                        #         # spacing: dp(5)
                        #         #size_hint_x: None
                        #         width: root.width*0.95
                        #         pos_hint: {"center_x": 0.5, "center_y": 0.5}
                        # BoxLayout:
                        #     orientation: "vertical"
                        #     size_hint: None, None
                        #     width: dp(45)
                        BoxLayout:
                            orientation: "vertical"
                            size_hint: None, None
                            width: dp(45)
                                
    # ------------------------------------------- Menú de Monitoreo -------------------------------------------------            
            MDBottomNavigationItem:
                # Configuraciones del menú de bluetooth
                id: monitoring_tab
                name: "Monitoring tab"
                text: "Monitoring"
                icon: "eye-plus"

                # Acciones 
                on_tab_release:
                    app.on_tab_select(monitoring_tab.name)

                # Tab design
                BoxLayout: 
                    orientation: 'vertical'
                    # pos_hint: {"center_x": 0.5, "center_y": 0.5}
                    # size_hint: None, None
                    # width: root.width*0.9

                    # Background color
                    canvas.before:
                        Color:
                            rgba: app.colors["Dark Blue"]
                        Rectangle:
                            pos: self.pos
                            size: self.size
                    
                    GridLayout: # Distribución principal del menú como GridLayout de 9 filas
                        rows: 9
                        cols: 1
                        padding: dp(10)
                        spacing: dp(10)

            # ---------------------------------- Título del Menú -------------------------------------------- 
                        BoxLayout: # ROW 1 Título general
                            orientation: "vertical"
                            pos_hint: {"center_x": 0.5, "center_y": 0.5}
                            size_hint: None, None
                            size: (root.width, dp(35))

                            CustomLabelAD: 
                                id: monitoring_title
                                text: "Monitoring Tab"
                                size: self.size
                                pos: self.pos
                                pos_hint: {"center_x": 0.5, "center_y": 0.5}
                            
                        BoxLayout: #ROW 2 Text field 1
                            orientation: 'vertical'
                            padding: (dp(5), dp(5))
                            size_hint: None, None
                            size: (root.width, dp(50))
                            pos_hint: {"center_x": 0.5,"center_y": 0.5}

                            CustomLabelRoboto: 
                                id: pv1_label
                                text: "Hip motor"

                        BoxLayout: #ROW 2 Text field 1
                            orientation: 'vertical'
                            padding: (dp(5), dp(5))
                            size_hint: None, None
                            size: (root.width, dp(50))
                            pos_hint: {"center_x": 0.5,"center_y": 0.5}

                            CustomTextEntry:
                                id: pv_motor1
                                size_hint: 0.2, None
                                pos_hint: {"center_x": 0.5}
                                hint_text: "PV:"
                                readonly: True
                        
                        BoxLayout: #ROW 3 Text field 2
                            orientation: 'vertical'
                            padding: (dp(5), dp(5))
                            size_hint: None, None
                            size: (root.width, dp(50))
                            pos_hint: {"center_x": 0.5,"center_y": 0.5}
                            
                            CustomLabelRoboto: 
                                id: pv2_label
                                text: "Knee motor"

                        BoxLayout: #ROW 2 Text field 1
                            orientation: 'vertical'
                            padding: (dp(5), dp(5))
                            size_hint: None, None
                            size: (root.width, dp(50))
                            pos_hint: {"center_x": 0.5,"center_y": 0.5}

                            CustomTextEntry:
                                id: pv_motor2
                                size_hint: 0.2, None
                                pos_hint: {"center_x": 0.5}
                                hint_text: "PV:"
                                readonly: True
                        
                        BoxLayout: #ROW 4 Text field 3
                            orientation: 'vertical'
                            padding: (dp(5), dp(5))
                            size_hint: None, None
                            size: (root.width, dp(50))
                            pos_hint: {"center_x": 0.5,"center_y": 0.5}
                            
                            CustomLabelRoboto: 
                                id: pv3_label
                                text: "Ankle motor"

                        BoxLayout: #ROW 2 Text field 1
                            orientation: 'vertical'
                            padding: (dp(5), dp(5))
                            size_hint: None, None
                            size: (root.width, dp(50))
                            pos_hint: {"center_x": 0.5,"center_y": 0.5}

                            CustomTextEntry:
                                id: pv_motor3
                                size_hint: 0.2, None
                                pos_hint: {"center_x": 0.5}
                                hint_text: "PV:"
                                readonly: True
    # -------------------------- Botón info de equipo -------------------------------------------
    FloatLayout: 
        MDIconButton:
            icon: "information-outline"
            pos_hint: {"right": 0.98, "top": 0.99}
            theme_text_color: "Custom"
            size: self.size
            text_color: app.colors["White"]
            on_release: app.show_popup()
        
        MDIconButton:
            icon: "images/PossibleLogoW.png"
            pos_hint: {"left": 0.98, "top": 0.99}
            theme_text_color: "Custom"
            #size: self.size
            size_hint: None, None  # Disable automatic size hinting
            size: dp(42), dp(42)  # Adjust button size
            icon_size: dp(40)  # Adjust icon size
            text_color: app.colors["White"]
            on_release: app.show_motor_popup()

# --------------------------------------- Ventana secundaria ----------------------------------------------   
<SecundaryWindow>:
    # Empty
    name: "Secundary Window"    
